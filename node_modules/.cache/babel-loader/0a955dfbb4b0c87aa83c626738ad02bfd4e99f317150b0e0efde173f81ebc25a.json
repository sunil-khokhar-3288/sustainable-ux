{"ast":null,"code":"import React,{useEffect,useRef,useState}from'react';import{createDoorScene}from'./doorScene';import{GPUStatsDisplay,GPUStatsToggle}from'./GPUStatsDisplay';import{GPUStressTest,StressTestControls}from'./GPUStressTest';import GPUDashboard from'./GPUDashboard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ThreeSceneWithGPU(){const mountRef=useRef(null);const sceneRef=useRef(null);const[gpuMonitor,setGpuMonitor]=useState(null);const[stressTest,setStressTest]=useState(null);const[showStats,setShowStats]=useState(true);const[isStressTestRunning,setIsStressTestRunning]=useState(false);const[mode,setMode]=useState('optimized');const[theme,setTheme]=useState('dark');const[pixelRatioClamp,setPixelRatioClamp]=useState(1.5);const[viewportScale,setViewportScale]=useState(1.0);const[targetFps,setTargetFps]=useState(30);const[backgroundFps,setBackgroundFps]=useState(5);const getOptimizationInfo=()=>{return mode==='optimized'?{fpsCap:30,pixelRatioMax:1.5,powerPreference:'low-power',antialias:false,pauseOnHidden:true}:{fpsCap:60,pixelRatioMax:3,powerPreference:'default/hi-perf',antialias:false,pauseOnHidden:true};};const[baselineAvg,setBaselineAvg]=useState(null);const[optimizedAvg,setOptimizedAvg]=useState(null);const[baselinePowerAvg,setBaselinePowerAvg]=useState(null);const[optimizedPowerAvg,setOptimizedPowerAvg]=useState(null);const[showDashboard,setShowDashboard]=useState(true);useEffect(()=>{if(!mountRef.current)return;// Create the Three.js scene\nconst{cleanup,gpuMonitor:monitor,scene,renderer,setPerformanceMode,setTargetFps:setTfps,setBackgroundFps:setBfps,setPixelRatioClamp,setViewportScale,setTheme:setSceneTheme,getCurrentSettings,currentTheme}=createDoorScene(mountRef.current);sceneRef.current={cleanup,scene,renderer,setPerformanceMode,setTfps,setBfps,setPixelRatioClamp,setViewportScale,setSceneTheme,getCurrentSettings};setGpuMonitor(monitor);// Initialize stress test\nconst test=new GPUStressTest(scene,renderer);setStressTest(test);return()=>{if(sceneRef.current){test.stopStressTest();sceneRef.current.cleanup();}};},[]);const toggleStressTest=()=>{if(!stressTest)return;if(isStressTestRunning){stressTest.stopStressTest();setIsStressTestRunning(false);}else{stressTest.startStressTest(50);setIsStressTestRunning(true);}};const handleIntensityChange=intensity=>{if(stressTest){stressTest.adjustIntensity(intensity);}};const toggleMode=async()=>{if(!sceneRef.current)return;const next=mode==='optimized'?'baseline':'optimized';sceneRef.current.setPerformanceMode(next);setMode(next);};// Sync scene controls when local states change\nuseEffect(()=>{var _sceneRef$current$set,_sceneRef$current;if(!sceneRef.current)return;(_sceneRef$current$set=(_sceneRef$current=sceneRef.current).setSceneTheme)===null||_sceneRef$current$set===void 0?void 0:_sceneRef$current$set.call(_sceneRef$current,theme);},[theme]);useEffect(()=>{var _sceneRef$current$set2,_sceneRef$current2;if(!sceneRef.current)return;(_sceneRef$current$set2=(_sceneRef$current2=sceneRef.current).setTfps)===null||_sceneRef$current$set2===void 0?void 0:_sceneRef$current$set2.call(_sceneRef$current2,targetFps);},[targetFps]);useEffect(()=>{var _sceneRef$current$set3,_sceneRef$current3;if(!sceneRef.current)return;(_sceneRef$current$set3=(_sceneRef$current3=sceneRef.current).setBfps)===null||_sceneRef$current$set3===void 0?void 0:_sceneRef$current$set3.call(_sceneRef$current3,backgroundFps);},[backgroundFps]);useEffect(()=>{var _sceneRef$current$set4,_sceneRef$current4;if(!sceneRef.current)return;(_sceneRef$current$set4=(_sceneRef$current4=sceneRef.current).setPixelRatioClamp)===null||_sceneRef$current$set4===void 0?void 0:_sceneRef$current$set4.call(_sceneRef$current4,pixelRatioClamp);},[pixelRatioClamp]);useEffect(()=>{var _sceneRef$current$set5,_sceneRef$current5;if(!sceneRef.current)return;(_sceneRef$current$set5=(_sceneRef$current5=sceneRef.current).setViewportScale)===null||_sceneRef$current$set5===void 0?void 0:_sceneRef$current$set5.call(_sceneRef$current5,viewportScale);},[viewportScale]);// Measure averages over a window\nconst measureAverages=function(){let windowMs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:2000;return new Promise(resolve=>{if(!gpuMonitor)return resolve(null);const utilSamples=[];const powerSamples=[];const start=performance.now();const timer=setInterval(()=>{const s=gpuMonitor.getStats();utilSamples.push(s.gpu.utilization);powerSamples.push(s.gpu.power);if(performance.now()-start>=windowMs){clearInterval(timer);const avgUtil=utilSamples.reduce((a,b)=>a+b,0)/utilSamples.length||0;const avgPower=powerSamples.reduce((a,b)=>a+b,0)/powerSamples.length||0;resolve({utilization:Math.round(avgUtil),power:Math.round(avgPower)});}},100);});};const runComparison=async()=>{if(!sceneRef.current)return;// Baseline\nsceneRef.current.setPerformanceMode('baseline');await new Promise(r=>setTimeout(r,300));const base=await measureAverages(2000);setBaselineAvg(base?base.utilization:null);setBaselinePowerAvg(base?base.power:null);// Optimized\nsceneRef.current.setPerformanceMode('optimized');await new Promise(r=>setTimeout(r,300));const opt=await measureAverages(2000);setOptimizedAvg(opt?opt.utilization:null);setOptimizedPowerAvg(opt?opt.power:null);setMode('optimized');};return/*#__PURE__*/_jsxs(\"div\",{style:{width:'100%',height:'100%',position:'relative'},children:[/*#__PURE__*/_jsx(\"div\",{ref:mountRef,style:{width:'100%',height:'100%'}}),/*#__PURE__*/_jsx(GPUStatsToggle,{onToggle:setShowStats}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowDashboard(true),style:{position:'fixed',right:'16px',bottom:'16px',background:'linear-gradient(135deg,rgb(238, 245, 241),rgb(231, 241, 224))',color:'#0b0b0b',border:'none',padding:'12px 16px',borderRadius:'999px',cursor:'pointer',fontFamily:'monospace',fontSize:'13px',zIndex:1100,boxShadow:'0 12px 24px rgba(0,0,0,0.35)'},children:\"Open Sustainability Dashboard\"}),showStats&&gpuMonitor&&/*#__PURE__*/_jsx(GPUStatsDisplay,{gpuMonitor:gpuMonitor,mode:mode,optimizationInfo:getOptimizationInfo(),hasComparison:baselineAvg!==null||optimizedAvg!==null,extraControls:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'6px'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'8px',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"button\",{onClick:toggleMode,style:{padding:'6px 10px'},children:[\"Mode: \",mode==='optimized'?'Optimized':'Baseline']}),/*#__PURE__*/_jsx(\"button\",{onClick:runComparison,style:{padding:'6px 10px'},children:\"Compare (2s each)\"}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowDashboard(v=>!v),style:{padding:'6px 10px'},children:[showDashboard?'Hide':'Show',\" Dashboard\"]}),(baselineAvg!==null||optimizedAvg!==null)&&/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'11px'},children:[\"Baseline: \",baselineAvg!==null&&baselineAvg!==void 0?baselineAvg:'-',\"% | Optimized: \",optimizedAvg!==null&&optimizedAvg!==void 0?optimizedAvg:'-',\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'1fr 1fr',gap:8},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:6},children:[/*#__PURE__*/_jsx(\"label\",{style:{fontSize:11},children:\"Theme\"}),/*#__PURE__*/_jsxs(\"select\",{value:theme,onChange:e=>setTheme(e.target.value),style:{padding:'4px 6px',fontSize:12},children:[/*#__PURE__*/_jsx(\"option\",{value:\"dark\",children:\"Dark (energy-friendly)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"light\",children:\"Light\"}),/*#__PURE__*/_jsx(\"option\",{value:\"eink\",children:\"E-Ink (grayscale)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"high-contrast\",children:\"High Contrast\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:6},children:[/*#__PURE__*/_jsxs(\"label\",{style:{fontSize:11},children:[\"Target FPS: \",targetFps]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"15\",max:\"60\",value:targetFps,onChange:e=>setTargetFps(parseInt(e.target.value))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:6},children:[/*#__PURE__*/_jsxs(\"label\",{style:{fontSize:11},children:[\"Background FPS: \",backgroundFps]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"15\",value:backgroundFps,onChange:e=>setBackgroundFps(parseInt(e.target.value))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:6},children:[/*#__PURE__*/_jsxs(\"label\",{style:{fontSize:11},children:[\"Pixel Ratio Clamp: \",pixelRatioClamp.toFixed(2)]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0.5\",max:\"3\",step:\"0.1\",value:pixelRatioClamp,onChange:e=>setPixelRatioClamp(parseFloat(e.target.value))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:6},children:[/*#__PURE__*/_jsxs(\"label\",{style:{fontSize:11},children:[\"Viewport Scale: \",(viewportScale*100).toFixed(0),\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0.3\",max:\"1\",step:\"0.05\",value:viewportScale,onChange:e=>setViewportScale(parseFloat(e.target.value))})]})]}),baselinePowerAvg!==null&&optimizedPowerAvg!==null&&(()=>{const wattsSaved=Math.max(0,baselinePowerAvg-optimizedPowerAvg);const gramsPerWh=0.4;// 400 g/kWh\nconst gramsPerHour=Math.round(wattsSaved*gramsPerWh);const pct=baselinePowerAvg>0?Math.round(wattsSaved/baselinePowerAvg*100):0;return/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'11px'},children:[\"Savings: ~\",wattsSaved,\" W (\",pct,\"%) (~\",gramsPerHour,\" g CO\\u2082e/hour)\"]});})()]})}),showDashboard&&gpuMonitor&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',inset:0,background:'rgba(6,10,12,0.8)',backdropFilter:'blur(10px)',zIndex:1200,display:'flex',alignItems:'center',justifyContent:'center',padding:0},children:/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative',width:'100vw',height:'100vh',overflow:'auto',background:'linear-gradient(180deg,rgb(75, 160, 106), #0a0d0f)',borderTop:'1px solid rgba(255,255,255,0.06)'},children:[/*#__PURE__*/_jsx(\"div\",{style:{top:0,zIndex:1,borderBottom:'1px solid rgba(0,0,0,0.08)'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'center',justifyContent:'center',padding:'12px 18px',gap:12},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontFamily:'monospace',fontSize:24,color:'orange',fontWeight:700},children:\"Sustainability UX Dashboard\"}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',right:18},children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowDashboard(false),style:{background:'rgba(249, 247, 247, 0.25)',color:'rgba(245, 9, 9, 0.25)',border:'1px solid rgba(230, 12, 12, 0.25)',borderRadius:10,padding:'8px 12px',cursor:'pointer'},children:\"Close\"})})]})}),/*#__PURE__*/_jsx(GPUDashboard,{inModal:true,gpuMonitor:gpuMonitor,baselinePowerAvg:baselinePowerAvg,optimizedPowerAvg:optimizedPowerAvg,settings:{theme,pixelRatioClamp,viewportScale,targetFps,backgroundFps},onApplyOptimizations:()=>{// Opinionated optimized preset\nsetTheme('dark');setTargetFps(30);setBackgroundFps(5);setPixelRatioClamp(1.2);setViewportScale(0.8);if(sceneRef.current){sceneRef.current.setPerformanceMode('optimized');}},onExportMetrics:()=>{var _s$gpu$temperature;if(!gpuMonitor)return;const s=gpuMonitor.getStats();const csv=['metric,value',\"fps,\".concat(s.fps.toFixed(2)),\"frameTimeMs,\".concat(s.frameTime.toFixed(2)),\"gpuUtilizationPct,\".concat(s.gpu.utilization),\"gpuPowerW,\".concat(s.gpu.power),\"gpuTempC,\".concat((_s$gpu$temperature=s.gpu.temperature)===null||_s$gpu$temperature===void 0?void 0:_s$gpu$temperature.toFixed(1)),\"drawCalls,\".concat(s.drawCalls),\"triangles,\".concat(s.triangles),\"textures,\".concat(s.textures),\"pixelRatioClamp,\".concat(pixelRatioClamp),\"viewportScale,\".concat(viewportScale),\"targetFps,\".concat(targetFps),\"backgroundFps,\".concat(backgroundFps),\"theme,\".concat(theme)].join('\\n');const blob=new Blob([csv],{type:'text/csv;charset=utf-8;'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download='sustainability-metrics.csv';document.body.appendChild(link);link.click();document.body.removeChild(link);URL.revokeObjectURL(url);}})]})}),/*#__PURE__*/_jsx(StressTestControls,{stressTest:stressTest,isRunning:isStressTestRunning,onToggle:toggleStressTest,onIntensityChange:handleIntensityChange})]});}","map":{"version":3,"names":["React","useEffect","useRef","useState","createDoorScene","GPUStatsDisplay","GPUStatsToggle","GPUStressTest","StressTestControls","GPUDashboard","jsx","_jsx","jsxs","_jsxs","ThreeSceneWithGPU","mountRef","sceneRef","gpuMonitor","setGpuMonitor","stressTest","setStressTest","showStats","setShowStats","isStressTestRunning","setIsStressTestRunning","mode","setMode","theme","setTheme","pixelRatioClamp","setPixelRatioClamp","viewportScale","setViewportScale","targetFps","setTargetFps","backgroundFps","setBackgroundFps","getOptimizationInfo","fpsCap","pixelRatioMax","powerPreference","antialias","pauseOnHidden","baselineAvg","setBaselineAvg","optimizedAvg","setOptimizedAvg","baselinePowerAvg","setBaselinePowerAvg","optimizedPowerAvg","setOptimizedPowerAvg","showDashboard","setShowDashboard","current","cleanup","monitor","scene","renderer","setPerformanceMode","setTfps","setBfps","setSceneTheme","getCurrentSettings","currentTheme","test","stopStressTest","toggleStressTest","startStressTest","handleIntensityChange","intensity","adjustIntensity","toggleMode","next","_sceneRef$current$set","_sceneRef$current","call","_sceneRef$current$set2","_sceneRef$current2","_sceneRef$current$set3","_sceneRef$current3","_sceneRef$current$set4","_sceneRef$current4","_sceneRef$current$set5","_sceneRef$current5","measureAverages","windowMs","arguments","length","undefined","Promise","resolve","utilSamples","powerSamples","start","performance","now","timer","setInterval","s","getStats","push","gpu","utilization","power","clearInterval","avgUtil","reduce","a","b","avgPower","Math","round","runComparison","r","setTimeout","base","opt","style","width","height","position","children","ref","onToggle","onClick","right","bottom","background","color","border","padding","borderRadius","cursor","fontFamily","fontSize","zIndex","boxShadow","optimizationInfo","hasComparison","extraControls","display","flexDirection","gap","alignItems","v","gridTemplateColumns","value","onChange","e","target","type","min","max","parseInt","toFixed","step","parseFloat","wattsSaved","gramsPerWh","gramsPerHour","pct","inset","backdropFilter","justifyContent","overflow","borderTop","top","borderBottom","fontWeight","inModal","settings","onApplyOptimizations","onExportMetrics","_s$gpu$temperature","csv","concat","fps","frameTime","temperature","drawCalls","triangles","textures","join","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","isRunning","onIntensityChange"],"sources":["C:/D-Drive/AI For Retail/Sustainability Hackathon FLO 2025/Latest Code/sustainable-ux/src/ThreeSceneWithGPU.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createDoorScene } from './doorScene';\nimport { GPUStatsDisplay, GPUStatsToggle } from './GPUStatsDisplay';\nimport { GPUStressTest, StressTestControls } from './GPUStressTest';\nimport GPUDashboard from './GPUDashboard';\n\nexport default function ThreeSceneWithGPU() {\n  const mountRef = useRef(null);\n  const sceneRef = useRef(null);\n  const [gpuMonitor, setGpuMonitor] = useState(null);\n  const [stressTest, setStressTest] = useState(null);\n  const [showStats, setShowStats] = useState(true);\n  const [isStressTestRunning, setIsStressTestRunning] = useState(false);\n  const [mode, setMode] = useState('optimized');\n  const [theme, setTheme] = useState('dark');\n  const [pixelRatioClamp, setPixelRatioClamp] = useState(1.5);\n  const [viewportScale, setViewportScale] = useState(1.0);\n  const [targetFps, setTargetFps] = useState(30);\n  const [backgroundFps, setBackgroundFps] = useState(5);\n  const getOptimizationInfo = () => {\n    return mode === 'optimized' ? {\n      fpsCap: 30,\n      pixelRatioMax: 1.5,\n      powerPreference: 'low-power',\n      antialias: false,\n      pauseOnHidden: true\n    } : {\n      fpsCap: 60,\n      pixelRatioMax: 3,\n      powerPreference: 'default/hi-perf',\n      antialias: false,\n      pauseOnHidden: true\n    };\n  };\n  const [baselineAvg, setBaselineAvg] = useState(null);\n  const [optimizedAvg, setOptimizedAvg] = useState(null);\n  const [baselinePowerAvg, setBaselinePowerAvg] = useState(null);\n  const [optimizedPowerAvg, setOptimizedPowerAvg] = useState(null);\n  const [showDashboard, setShowDashboard] = useState(true);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Create the Three.js scene\n    const { cleanup, gpuMonitor: monitor, scene, renderer, setPerformanceMode, setTargetFps: setTfps, setBackgroundFps: setBfps, setPixelRatioClamp, setViewportScale, setTheme: setSceneTheme, getCurrentSettings, currentTheme } = createDoorScene(mountRef.current);\n    sceneRef.current = { cleanup, scene, renderer, setPerformanceMode, setTfps, setBfps, setPixelRatioClamp, setViewportScale, setSceneTheme, getCurrentSettings };\n    setGpuMonitor(monitor);\n    \n    // Initialize stress test\n    const test = new GPUStressTest(scene, renderer);\n    setStressTest(test);\n\n    return () => {\n      if (sceneRef.current) {\n        test.stopStressTest();\n        sceneRef.current.cleanup();\n      }\n    };\n  }, []);\n\n  const toggleStressTest = () => {\n    if (!stressTest) return;\n    \n    if (isStressTestRunning) {\n      stressTest.stopStressTest();\n      setIsStressTestRunning(false);\n    } else {\n      stressTest.startStressTest(50);\n      setIsStressTestRunning(true);\n    }\n  };\n\n  const handleIntensityChange = (intensity) => {\n    if (stressTest) {\n      stressTest.adjustIntensity(intensity);\n    }\n  };\n\n  const toggleMode = async () => {\n    if (!sceneRef.current) return;\n    const next = mode === 'optimized' ? 'baseline' : 'optimized';\n    sceneRef.current.setPerformanceMode(next);\n    setMode(next);\n  };\n\n  // Sync scene controls when local states change\n  useEffect(() => {\n    if (!sceneRef.current) return;\n    sceneRef.current.setSceneTheme?.(theme);\n  }, [theme]);\n\n  useEffect(() => {\n    if (!sceneRef.current) return;\n    sceneRef.current.setTfps?.(targetFps);\n  }, [targetFps]);\n\n  useEffect(() => {\n    if (!sceneRef.current) return;\n    sceneRef.current.setBfps?.(backgroundFps);\n  }, [backgroundFps]);\n\n  useEffect(() => {\n    if (!sceneRef.current) return;\n    sceneRef.current.setPixelRatioClamp?.(pixelRatioClamp);\n  }, [pixelRatioClamp]);\n\n  useEffect(() => {\n    if (!sceneRef.current) return;\n    sceneRef.current.setViewportScale?.(viewportScale);\n  }, [viewportScale]);\n\n  // Measure averages over a window\n  const measureAverages = (windowMs = 2000) => new Promise((resolve) => {\n    if (!gpuMonitor) return resolve(null);\n    const utilSamples = [];\n    const powerSamples = [];\n    const start = performance.now();\n    const timer = setInterval(() => {\n      const s = gpuMonitor.getStats();\n      utilSamples.push(s.gpu.utilization);\n      powerSamples.push(s.gpu.power);\n      if (performance.now() - start >= windowMs) {\n        clearInterval(timer);\n        const avgUtil = utilSamples.reduce((a, b) => a + b, 0) / utilSamples.length || 0;\n        const avgPower = powerSamples.reduce((a, b) => a + b, 0) / powerSamples.length || 0;\n        resolve({\n          utilization: Math.round(avgUtil),\n          power: Math.round(avgPower)\n        });\n      }\n    }, 100);\n  });\n\n  const runComparison = async () => {\n    if (!sceneRef.current) return;\n    // Baseline\n    sceneRef.current.setPerformanceMode('baseline');\n    await new Promise(r => setTimeout(r, 300));\n    const base = await measureAverages(2000);\n    setBaselineAvg(base ? base.utilization : null);\n    setBaselinePowerAvg(base ? base.power : null);\n    // Optimized\n    sceneRef.current.setPerformanceMode('optimized');\n    await new Promise(r => setTimeout(r, 300));\n    const opt = await measureAverages(2000);\n    setOptimizedAvg(opt ? opt.utilization : null);\n    setOptimizedPowerAvg(opt ? opt.power : null);\n    setMode('optimized');\n  };\n\n  return (\n    <div style={{ width: '100%', height: '100%', position: 'relative' }}>\n      <div ref={mountRef} style={{ width: '100%', height: '100%' }} />\n      <GPUStatsToggle onToggle={setShowStats} />\n      {/* Floating Dashboard Open Button */}\n      <button\n        onClick={() => setShowDashboard(true)}\n        style={{\n          position: 'fixed',\n          right: '16px',\n          bottom: '16px',\n          background: 'linear-gradient(135deg,rgb(238, 245, 241),rgb(231, 241, 224))',\n          color: '#0b0b0b',\n          border: 'none',\n          padding: '12px 16px',\n          borderRadius: '999px',\n          cursor: 'pointer',\n          fontFamily: 'monospace',\n          fontSize: '13px',\n          zIndex: 1100,\n          boxShadow: '0 12px 24px rgba(0,0,0,0.35)'\n        }}\n      >\n        Open Sustainability Dashboard\n      </button>\n      {showStats && gpuMonitor && (\n        <GPUStatsDisplay \n          gpuMonitor={gpuMonitor}\n          mode={mode}\n          optimizationInfo={getOptimizationInfo()}\n          hasComparison={baselineAvg !== null || optimizedAvg !== null}\n          extraControls={\n            <div style={{ display: 'flex', flexDirection: 'column', gap: '6px' }}>\n              <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n                <button onClick={toggleMode} style={{ padding: '6px 10px' }}>\n                  Mode: {mode === 'optimized' ? 'Optimized' : 'Baseline'}\n                </button>\n                <button onClick={runComparison} style={{ padding: '6px 10px' }}>\n                  Compare (2s each)\n                </button>\n                <button onClick={() => setShowDashboard(v => !v)} style={{ padding: '6px 10px' }}>\n                  {showDashboard ? 'Hide' : 'Show'} Dashboard\n                </button>\n                {(baselineAvg !== null || optimizedAvg !== null) && (\n                  <div style={{ fontSize: '11px' }}>\n                    Baseline: {baselineAvg ?? '-'}% | Optimized: {optimizedAvg ?? '-'}%\n                  </div>\n                )}\n              </div>\n              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: 8 }}>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 11 }}>Theme</label>\n                  <select value={theme} onChange={(e) => setTheme(e.target.value)} style={{ padding: '4px 6px', fontSize: 12 }}>\n                    <option value=\"dark\">Dark (energy-friendly)</option>\n                    <option value=\"light\">Light</option>\n                    <option value=\"eink\">E-Ink (grayscale)</option>\n                    <option value=\"high-contrast\">High Contrast</option>\n                  </select>\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 11 }}>Target FPS: {targetFps}</label>\n                  <input type=\"range\" min=\"15\" max=\"60\" value={targetFps} onChange={(e) => setTargetFps(parseInt(e.target.value))} />\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 11 }}>Background FPS: {backgroundFps}</label>\n                  <input type=\"range\" min=\"1\" max=\"15\" value={backgroundFps} onChange={(e) => setBackgroundFps(parseInt(e.target.value))} />\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 11 }}>Pixel Ratio Clamp: {pixelRatioClamp.toFixed(2)}</label>\n                  <input type=\"range\" min=\"0.5\" max=\"3\" step=\"0.1\" value={pixelRatioClamp} onChange={(e) => setPixelRatioClamp(parseFloat(e.target.value))} />\n                </div>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: 6 }}>\n                  <label style={{ fontSize: 11 }}>Viewport Scale: {(viewportScale * 100).toFixed(0)}%</label>\n                  <input type=\"range\" min=\"0.3\" max=\"1\" step=\"0.05\" value={viewportScale} onChange={(e) => setViewportScale(parseFloat(e.target.value))} />\n                </div>\n              </div>\n              {(baselinePowerAvg !== null && optimizedPowerAvg !== null) && (\n                (() => {\n                  const wattsSaved = Math.max(0, baselinePowerAvg - optimizedPowerAvg);\n                  const gramsPerWh = 0.4; // 400 g/kWh\n                  const gramsPerHour = Math.round(wattsSaved * gramsPerWh);\n                  const pct = baselinePowerAvg > 0 ? Math.round((wattsSaved / baselinePowerAvg) * 100) : 0;\n                  return (\n                    <div style={{ fontSize: '11px' }}>\n                      Savings: ~{wattsSaved} W ({pct}%) (~{gramsPerHour} g CO₂e/hour)\n                    </div>\n                  );\n                })()\n              )}\n            </div>\n          }\n        />\n      )}\n      {/* Modal-style overlay Dashboard */}\n      {showDashboard && gpuMonitor && (\n        <div style={{\n          position: 'fixed',\n          inset: 0,\n          background: 'rgba(6,10,12,0.8)',\n          backdropFilter: 'blur(10px)',\n          zIndex: 1200,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          padding: 0\n        }}>\n          <div style={{\n            position: 'relative',\n            width: '100vw',\n            height: '100vh',\n            overflow: 'auto',\n            background: 'linear-gradient(180deg,rgb(75, 160, 106), #0a0d0f)',\n            borderTop: '1px solid rgba(255,255,255,0.06)'\n          }}>\n            <div style={{ top: 0, zIndex: 1, borderBottom: '1px solid rgba(0,0,0,0.08)' }}>\n              <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '12px 18px', gap: 12 }}>\n                <div style={{ fontFamily: 'monospace', fontSize: 24, color: 'orange', fontWeight: 700 }}>Sustainability UX Dashboard</div>\n                <div style={{ position: 'absolute', right: 18 }}>\n                  <button onClick={() => setShowDashboard(false)} style={{\n                    background: 'rgba(249, 247, 247, 0.25)',\n                    color: 'rgba(245, 9, 9, 0.25)',\n                    border: '1px solid rgba(230, 12, 12, 0.25)',\n                    borderRadius: 10,\n                    padding: '8px 12px',\n                    cursor: 'pointer'\n                  }}>Close</button>\n                </div>\n              </div>\n            </div>\n            <GPUDashboard \n              inModal\n              gpuMonitor={gpuMonitor}\n              baselinePowerAvg={baselinePowerAvg}\n              optimizedPowerAvg={optimizedPowerAvg}\n              settings={{ theme, pixelRatioClamp, viewportScale, targetFps, backgroundFps }}\n              onApplyOptimizations={() => {\n                // Opinionated optimized preset\n                setTheme('dark');\n                setTargetFps(30);\n                setBackgroundFps(5);\n                setPixelRatioClamp(1.2);\n                setViewportScale(0.8);\n                if (sceneRef.current) {\n                  sceneRef.current.setPerformanceMode('optimized');\n                }\n              }}\n              onExportMetrics={() => {\n                if (!gpuMonitor) return;\n                const s = gpuMonitor.getStats();\n                const csv = [\n                  'metric,value',\n                  `fps,${s.fps.toFixed(2)}`,\n                  `frameTimeMs,${s.frameTime.toFixed(2)}`,\n                  `gpuUtilizationPct,${s.gpu.utilization}`,\n                  `gpuPowerW,${s.gpu.power}`,\n                  `gpuTempC,${s.gpu.temperature?.toFixed(1)}`,\n                  `drawCalls,${s.drawCalls}`,\n                  `triangles,${s.triangles}`,\n                  `textures,${s.textures}`,\n                  `pixelRatioClamp,${pixelRatioClamp}`,\n                  `viewportScale,${viewportScale}`,\n                  `targetFps,${targetFps}`,\n                  `backgroundFps,${backgroundFps}`,\n                  `theme,${theme}`\n                ].join('\\n');\n                const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n                const url = URL.createObjectURL(blob);\n                const link = document.createElement('a');\n                link.href = url;\n                link.download = 'sustainability-metrics.csv';\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n                URL.revokeObjectURL(url);\n              }}\n            />\n          </div>\n        </div>\n      )}\n      <StressTestControls \n        stressTest={stressTest}\n        isRunning={isStressTestRunning}\n        onToggle={toggleStressTest}\n        onIntensityChange={handleIntensityChange}\n      />\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}