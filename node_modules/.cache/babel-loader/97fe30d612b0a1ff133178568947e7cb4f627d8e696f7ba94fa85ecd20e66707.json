{"ast":null,"code":"import*as THREE from\"three\";export class GPUStressTest{constructor(scene,renderer){this.scene=scene;this.renderer=renderer;this.stressObjects=[];this.isRunning=false;}startStressTest(){let intensity=arguments.length>0&&arguments[0]!==undefined?arguments[0]:100;this.isRunning=true;this.clearStressObjects();// Create multiple complex geometries to stress the GPU\nconst geometries=[new THREE.SphereGeometry(0.5,32,32),new THREE.BoxGeometry(1,1,1),new THREE.ConeGeometry(0.5,1,32),new THREE.CylinderGeometry(0.5,0.5,1,32),new THREE.TorusGeometry(0.5,0.2,16,100)];const materials=[new THREE.MeshStandardMaterial({color:0xff0000}),new THREE.MeshStandardMaterial({color:0x00ff00}),new THREE.MeshStandardMaterial({color:0x0000ff}),new THREE.MeshStandardMaterial({color:0xffff00}),new THREE.MeshStandardMaterial({color:0xff00ff})];// Create stress objects based on intensity\nfor(let i=0;i<intensity;i++){const geometry=geometries[i%geometries.length];const material=materials[i%materials.length];const mesh=new THREE.Mesh(geometry,material);// Random positioning\nmesh.position.set((Math.random()-0.5)*20,(Math.random()-0.5)*20,(Math.random()-0.5)*20);// Random rotation\nmesh.rotation.set(Math.random()*Math.PI,Math.random()*Math.PI,Math.random()*Math.PI);this.stressObjects.push(mesh);this.scene.add(mesh);}// Start rotation animation for stress objects\nthis.animateStressObjects();}animateStressObjects(){if(!this.isRunning)return;this.stressObjects.forEach((obj,index)=>{obj.rotation.x+=0.01*(index%3+1);obj.rotation.y+=0.01*(index%2+1);obj.rotation.z+=0.01*(index%4+1);});requestAnimationFrame(()=>this.animateStressObjects());}stopStressTest(){this.isRunning=false;this.clearStressObjects();}clearStressObjects(){this.stressObjects.forEach(obj=>{this.scene.remove(obj);obj.geometry.dispose();obj.material.dispose();});this.stressObjects=[];}adjustIntensity(newIntensity){if(this.isRunning){this.startStressTest(newIntensity);}}}import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function StressTestControls(_ref){let{stressTest,isRunning,onToggle,onIntensityChange}=_ref;const[intensity,setIntensity]=useState(50);const handleIntensityChange=e=>{const newIntensity=parseInt(e.target.value);setIntensity(newIntensity);onIntensityChange(newIntensity);};return/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',bottom:'10px',left:'10px',background:'linear-gradient(180deg, rgba(236,253,245,0.9), rgba(209,250,229,0.88))',color:'#073b28',padding:'15px',borderRadius:'12px',fontFamily:'monospace',fontSize:'12px',zIndex:1000,border:'1px solid rgba(16,185,129,0.35)',minWidth:'200px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 10px 0',fontSize:'14px',color:'#065f46'},children:\"GPU Stress Test\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"button\",{onClick:onToggle,style:{background:isRunning?'linear-gradient(135deg, #f87171, #ef4444)':'linear-gradient(135deg, #34d399, #10b981)',color:'#0b0b0b',border:'none',padding:'8px 16px',borderRadius:'8px',cursor:'pointer',fontSize:'12px',width:'100%'},children:isRunning?'Stop Stress Test':'Start Stress Test'})}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"label\",{style:{display:'block',marginBottom:'5px'},children:[\"Intensity: \",intensity]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"10\",max:\"500\",value:intensity,onChange:handleIntensityChange,style:{width:'100%',accentColor:'#10B981'}}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'10px',color:'#065f46',marginTop:'2px'},children:\"More objects = Higher GPU load\"})]}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'10px',color:'#065f46'},children:isRunning?'Stress test is running':'Click start to stress test GPU'})]});}","map":{"version":3,"names":["THREE","GPUStressTest","constructor","scene","renderer","stressObjects","isRunning","startStressTest","intensity","arguments","length","undefined","clearStressObjects","geometries","SphereGeometry","BoxGeometry","ConeGeometry","CylinderGeometry","TorusGeometry","materials","MeshStandardMaterial","color","i","geometry","material","mesh","Mesh","position","set","Math","random","rotation","PI","push","add","animateStressObjects","forEach","obj","index","x","y","z","requestAnimationFrame","stopStressTest","remove","dispose","adjustIntensity","newIntensity","React","useState","jsx","_jsx","jsxs","_jsxs","StressTestControls","_ref","stressTest","onToggle","onIntensityChange","setIntensity","handleIntensityChange","e","parseInt","target","value","style","bottom","left","background","padding","borderRadius","fontFamily","fontSize","zIndex","border","minWidth","children","margin","marginBottom","onClick","cursor","width","display","type","min","max","onChange","accentColor","marginTop"],"sources":["C:/D-Drive/AI For Retail/Sustainability Hackathon FLO 2025/Latest Code/sustainable-ux/src/GPUStressTest.js"],"sourcesContent":["import * as THREE from \"three\";\n\nexport class GPUStressTest {\n  constructor(scene, renderer) {\n    this.scene = scene;\n    this.renderer = renderer;\n    this.stressObjects = [];\n    this.isRunning = false;\n  }\n\n  startStressTest(intensity = 100) {\n    this.isRunning = true;\n    this.clearStressObjects();\n    \n    // Create multiple complex geometries to stress the GPU\n    const geometries = [\n      new THREE.SphereGeometry(0.5, 32, 32),\n      new THREE.BoxGeometry(1, 1, 1),\n      new THREE.ConeGeometry(0.5, 1, 32),\n      new THREE.CylinderGeometry(0.5, 0.5, 1, 32),\n      new THREE.TorusGeometry(0.5, 0.2, 16, 100)\n    ];\n\n    const materials = [\n      new THREE.MeshStandardMaterial({ color: 0xff0000 }),\n      new THREE.MeshStandardMaterial({ color: 0x00ff00 }),\n      new THREE.MeshStandardMaterial({ color: 0x0000ff }),\n      new THREE.MeshStandardMaterial({ color: 0xffff00 }),\n      new THREE.MeshStandardMaterial({ color: 0xff00ff })\n    ];\n\n    // Create stress objects based on intensity\n    for (let i = 0; i < intensity; i++) {\n      const geometry = geometries[i % geometries.length];\n      const material = materials[i % materials.length];\n      const mesh = new THREE.Mesh(geometry, material);\n      \n      // Random positioning\n      mesh.position.set(\n        (Math.random() - 0.5) * 20,\n        (Math.random() - 0.5) * 20,\n        (Math.random() - 0.5) * 20\n      );\n      \n      // Random rotation\n      mesh.rotation.set(\n        Math.random() * Math.PI,\n        Math.random() * Math.PI,\n        Math.random() * Math.PI\n      );\n      \n      this.stressObjects.push(mesh);\n      this.scene.add(mesh);\n    }\n\n    // Start rotation animation for stress objects\n    this.animateStressObjects();\n  }\n\n  animateStressObjects() {\n    if (!this.isRunning) return;\n\n    this.stressObjects.forEach((obj, index) => {\n      obj.rotation.x += 0.01 * (index % 3 + 1);\n      obj.rotation.y += 0.01 * (index % 2 + 1);\n      obj.rotation.z += 0.01 * (index % 4 + 1);\n    });\n\n    requestAnimationFrame(() => this.animateStressObjects());\n  }\n\n  stopStressTest() {\n    this.isRunning = false;\n    this.clearStressObjects();\n  }\n\n  clearStressObjects() {\n    this.stressObjects.forEach(obj => {\n      this.scene.remove(obj);\n      obj.geometry.dispose();\n      obj.material.dispose();\n    });\n    this.stressObjects = [];\n  }\n\n  adjustIntensity(newIntensity) {\n    if (this.isRunning) {\n      this.startStressTest(newIntensity);\n    }\n  }\n}\n\nimport React, { useState } from 'react';\n\nexport function StressTestControls({ stressTest, isRunning, onToggle, onIntensityChange }) {\n  const [intensity, setIntensity] = useState(50);\n\n  const handleIntensityChange = (e) => {\n    const newIntensity = parseInt(e.target.value);\n    setIntensity(newIntensity);\n    onIntensityChange(newIntensity);\n  };\n\n  return (\n    <div style={{\n      position: 'fixed',\n      bottom: '10px',\n      left: '10px',\n      background: 'linear-gradient(180deg, rgba(236,253,245,0.9), rgba(209,250,229,0.88))',\n      color: '#073b28',\n      padding: '15px',\n      borderRadius: '12px',\n      fontFamily: 'monospace',\n      fontSize: '12px',\n      zIndex: 1000,\n      border: '1px solid rgba(16,185,129,0.35)',\n      minWidth: '200px'\n    }}>\n      <h3 style={{ margin: '0 0 10px 0', fontSize: '14px', color: '#065f46' }}>GPU Stress Test</h3>\n      \n      <div style={{ marginBottom: '10px' }}>\n        <button\n          onClick={onToggle}\n          style={{\n            background: isRunning ? 'linear-gradient(135deg, #f87171, #ef4444)' : 'linear-gradient(135deg, #34d399, #10b981)',\n            color: '#0b0b0b',\n            border: 'none',\n            padding: '8px 16px',\n            borderRadius: '8px',\n            cursor: 'pointer',\n            fontSize: '12px',\n            width: '100%'\n          }}\n        >\n          {isRunning ? 'Stop Stress Test' : 'Start Stress Test'}\n        </button>\n      </div>\n\n      <div style={{ marginBottom: '10px' }}>\n        <label style={{ display: 'block', marginBottom: '5px' }}>\n          Intensity: {intensity}\n        </label>\n        <input\n          type=\"range\"\n          min=\"10\"\n          max=\"500\"\n          value={intensity}\n          onChange={handleIntensityChange}\n          style={{\n            width: '100%',\n            accentColor: '#10B981'\n          }}\n        />\n        <div style={{ fontSize: '10px', color: '#065f46', marginTop: '2px' }}>\n          More objects = Higher GPU load\n        </div>\n      </div>\n\n      <div style={{ fontSize: '10px', color: '#065f46' }}>\n        {isRunning ? 'Stress test is running' : 'Click start to stress test GPU'}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}