{"ast":null,"code":"import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GPUMonitor } from './GPUMonitor'; // Ensure implemented or stubbed\n\nexport function createModelScene(mountNode) {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xffffff);\n  const camera = new THREE.PerspectiveCamera(60, mountNode.clientWidth / mountNode.clientHeight, 0.1, 1000);\n  camera.position.set(0, 1, 3);\n  const renderer = new THREE.WebGLRenderer({\n    antialias: true,\n    powerPreference: 'low-power'\n  });\n  // Adaptive resolution params (mutable)\n  let pixelRatioClamp = 1.5; // max device pixel ratio used\n  let viewportScale = 1.0; // render size factor relative to canvas size\n  const applyRendererSizing = () => {\n    const canvasW = mountNode.clientWidth;\n    const canvasH = mountNode.clientHeight;\n    const renderW = Math.max(1, Math.floor(canvasW * viewportScale));\n    const renderH = Math.max(1, Math.floor(canvasH * viewportScale));\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, pixelRatioClamp));\n    renderer.setSize(renderW, renderH, false);\n    // Upscale to fit the container while rendering at lower res\n    renderer.domElement.style.width = canvasW + 'px';\n    renderer.domElement.style.height = canvasH + 'px';\n    renderer.domElement.style.imageRendering = 'pixelated';\n  };\n  applyRendererSizing();\n  mountNode.appendChild(renderer.domElement);\n  const gpuMonitor = new GPUMonitor(renderer);\n  const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n  directionalLight.position.set(5, 5, 5);\n  scene.add(ambientLight);\n  scene.add(directionalLight);\n  const loader = new GLTFLoader();\n  let model = null;\n  let isModelLoaded = false;\n  loader.load('/models/car.glb',\n  // Ensure model is in /public/models/car_model.glb\n  gltf => {\n    model = gltf.scene;\n    model.scale.set(0.5, 0.5, 0.5);\n    model.position.set(0, 0, 0);\n    scene.add(model);\n    isModelLoaded = true;\n  }, undefined, error => console.error('Model load error:', error));\n\n  // Minimal overlay for current settings (metrics live in dashboard)\n  const overlay = document.createElement('div');\n  overlay.style.position = 'absolute';\n  overlay.style.top = '10px';\n  overlay.style.left = '10px';\n  overlay.style.background = 'rgba(255,255,255,0.85)';\n  overlay.style.padding = '8px 10px';\n  overlay.style.borderRadius = '12px';\n  overlay.style.fontFamily = 'Arial, sans-serif';\n  overlay.style.fontSize = '12px';\n  overlay.style.color = '#333';\n  overlay.style.zIndex = '10';\n  overlay.style.boxShadow = '0 10px 20px rgba(0,0,0,0.2)';\n  overlay.style.border = '1px solid rgba(0,0,0,0.1)';\n  mountNode.style.position = 'relative';\n  const updateOverlayText = () => {\n    const content = document.createElement('div');\n    content.textContent = `Resolution: PR≤${pixelRatioClamp.toFixed(2)} • Viewport ${(viewportScale * 100).toFixed(0)}%`;\n    const row = document.createElement('div');\n    row.style.display = 'flex';\n    row.style.alignItems = 'center';\n    row.style.gap = '8px';\n    const title = document.createElement('strong');\n    title.textContent = 'Scene Settings';\n    title.style.fontSize = '12px';\n    row.appendChild(title);\n    overlay.innerHTML = '';\n    overlay.appendChild(row);\n    overlay.appendChild(content);\n  };\n  updateOverlayText();\n  mountNode.appendChild(overlay);\n\n  // Collapsible overlay handle\n  let overlayCollapsed = false;\n  const collapseBtn = document.createElement('button');\n  collapseBtn.textContent = '−';\n  collapseBtn.style.background = 'transparent';\n  collapseBtn.style.border = 'none';\n  collapseBtn.style.cursor = 'pointer';\n  collapseBtn.style.fontSize = '14px';\n  collapseBtn.style.marginLeft = '6px';\n  collapseBtn.title = 'Collapse';\n  overlay.firstChild && overlay.firstChild.appendChild(collapseBtn);\n  const collapsedPill = document.createElement('button');\n  collapsedPill.textContent = 'Scene Settings';\n  collapsedPill.style.position = 'absolute';\n  collapsedPill.style.top = '10px';\n  collapsedPill.style.left = '10px';\n  collapsedPill.style.padding = '6px 10px';\n  collapsedPill.style.borderRadius = '999px';\n  collapsedPill.style.border = '1px solid rgba(0,0,0,0.15)';\n  collapsedPill.style.background = 'rgba(255,255,255,0.9)';\n  collapsedPill.style.fontFamily = 'Arial, sans-serif';\n  collapsedPill.style.fontSize = '12px';\n  collapsedPill.style.cursor = 'pointer';\n  collapsedPill.style.boxShadow = '0 8px 16px rgba(0,0,0,0.15)';\n  collapsedPill.style.display = 'none';\n  collapsedPill.style.zIndex = '11';\n  collapsedPill.addEventListener('click', () => {\n    overlayCollapsed = false;\n    overlay.style.display = 'block';\n    collapsedPill.style.display = 'none';\n  });\n  mountNode.appendChild(collapsedPill);\n  collapseBtn.addEventListener('click', () => {\n    overlayCollapsed = !overlayCollapsed;\n    if (overlayCollapsed) {\n      overlay.style.display = 'none';\n      collapsedPill.style.display = 'inline-block';\n    } else {\n      overlay.style.display = 'block';\n      collapsedPill.style.display = 'none';\n    }\n  });\n\n  // Interaction variables\n  let isDragging = false;\n  let prevX = 0;\n  let prevY = 0;\n  function onPointerDown(e) {\n    isDragging = true;\n    prevX = e.clientX;\n    prevY = e.clientY;\n  }\n  function onPointerMove(e) {\n    if (!isDragging || !isModelLoaded) return;\n    const deltaX = e.clientX - prevX;\n    const deltaY = e.clientY - prevY;\n    model.rotation.y += deltaX * 0.005;\n    model.rotation.x += deltaY * 0.005;\n\n    // Clamp vertical rotation to prevent flipping\n    model.rotation.x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, model.rotation.x));\n    prevX = e.clientX;\n    prevY = e.clientY;\n  }\n  function onPointerUp() {\n    isDragging = false;\n  }\n  renderer.domElement.addEventListener('pointerdown', onPointerDown);\n  renderer.domElement.addEventListener('pointermove', onPointerMove);\n  renderer.domElement.addEventListener('pointerup', onPointerUp);\n  renderer.domElement.addEventListener('pointerleave', onPointerUp);\n\n  // Render cadence control\n  let targetFps = 30; // foreground FPS target\n  let backgroundFps = 5; // when tab/page is hidden\n  let frameIntervalMs = 1000 / targetFps;\n  let lastRenderTime = 0;\n  let isHidden = typeof document !== 'undefined' ? document.hidden : false;\n  // Smooth recovery state\n  let rampStartMs = 0;\n  let rampDurationMs = 900;\n  function getEffectiveIntervalMs(now) {\n    const hiddenInterval = 1000 / Math.max(1, backgroundFps);\n    const visibleInterval = frameIntervalMs;\n    if (isHidden) return hiddenInterval;\n    // If we just became visible, ramp from hiddenInterval to visibleInterval\n    const t = rampStartMs ? Math.min(1, (now - rampStartMs) / rampDurationMs) : 1;\n    const eased = t < 1 ? t * t * (3 - 2 * t) : 1; // smoothstep easing\n    const eff = hiddenInterval + (visibleInterval - hiddenInterval) * eased;\n    return eff;\n  }\n  function animate(now) {\n    if (!lastRenderTime) lastRenderTime = now;\n    const elapsed = now - lastRenderTime;\n    const effInterval = getEffectiveIntervalMs(now);\n    if (elapsed >= effInterval) {\n      renderer.render(scene, camera);\n      if (gpuMonitor && typeof gpuMonitor.onFrameRendered === 'function') {\n        gpuMonitor.onFrameRendered(now);\n      }\n      lastRenderTime = now;\n    }\n    requestAnimationFrame(animate);\n  }\n  requestAnimationFrame(animate);\n  function setPerformanceMode(mode) {\n    if (mode === 'baseline') {\n      targetFps = 60;\n      frameIntervalMs = 1000 / targetFps;\n      pixelRatioClamp = 3;\n    } else {\n      targetFps = 30;\n      frameIntervalMs = 1000 / targetFps;\n      pixelRatioClamp = 1.5;\n    }\n    applyRendererSizing();\n  }\n  function setTargetFps(nextFps) {\n    targetFps = Math.max(1, Math.min(120, nextFps || 30));\n    frameIntervalMs = 1000 / targetFps;\n  }\n  function setBackgroundFps(nextFps) {\n    backgroundFps = Math.max(1, Math.min(30, nextFps || 5));\n  }\n  function setPixelRatioClampValue(nextClamp) {\n    pixelRatioClamp = Math.max(0.5, Math.min(3, nextClamp || 1.5));\n    applyRendererSizing();\n    updateOverlayText();\n  }\n  function setViewportScaleValue(nextScale) {\n    viewportScale = Math.max(0.3, Math.min(1, nextScale || 1));\n    applyRendererSizing();\n    updateOverlayText();\n  }\n\n  // Sustainable themes: light, dark, eink, high-contrast\n  let currentTheme = 'light';\n  function setTheme(theme) {\n    currentTheme = theme;\n    if (theme === 'dark') {\n      scene.background = new THREE.Color(0x0b0b0b);\n      ambientLight.intensity = 0.35;\n      directionalLight.intensity = 0.6;\n    } else if (theme === 'eink') {\n      scene.background = new THREE.Color(0xf2f2f2);\n      ambientLight.intensity = 0.25;\n      directionalLight.intensity = 0.4;\n      // Force materials to grayscale\n      scene.traverse(obj => {\n        if (obj.isMesh && obj.material) {\n          if (Array.isArray(obj.material)) {\n            obj.material.forEach(m => {\n              m.color = new THREE.Color(0x222222);\n              m.metalness = 0;\n              m.roughness = 1;\n            });\n          } else {\n            obj.material.color = new THREE.Color(0x222222);\n            if ('metalness' in obj.material) obj.material.metalness = 0;\n            if ('roughness' in obj.material) obj.material.roughness = 1;\n          }\n        }\n      });\n    } else if (theme === 'high-contrast') {\n      scene.background = new THREE.Color(0x000000);\n      ambientLight.intensity = 0.2;\n      directionalLight.intensity = 1.2;\n      directionalLight.color = new THREE.Color(0xffffff);\n    } else {\n      // light\n      scene.background = new THREE.Color(0xffffff);\n      ambientLight.intensity = 0.7;\n      directionalLight.intensity = 1.0;\n    }\n    // Overlay styling according to theme brightness\n    overlay.style.background = theme === 'dark' || theme === 'high-contrast' ? 'rgba(0,0,0,0.7)' : 'rgba(255,255,255,0.85)';\n    overlay.style.color = theme === 'dark' || theme === 'high-contrast' ? '#fff' : '#333';\n  }\n  window.addEventListener('resize', () => {\n    camera.aspect = mountNode.clientWidth / mountNode.clientHeight;\n    camera.updateProjectionMatrix();\n    applyRendererSizing();\n  });\n  document.addEventListener('visibilitychange', () => {\n    const wasHidden = isHidden;\n    isHidden = document.hidden;\n    if (!isHidden && wasHidden) {\n      rampStartMs = performance.now();\n    }\n  });\n  function cleanup() {\n    renderer.domElement.removeEventListener('pointerdown', onPointerDown);\n    renderer.domElement.removeEventListener('pointermove', onPointerMove);\n    renderer.domElement.removeEventListener('pointerup', onPointerUp);\n    renderer.domElement.removeEventListener('pointerleave', onPointerUp);\n    if (model) {\n      model.traverse(child => {\n        if (child.geometry) child.geometry.dispose();\n        if (child.material) child.material.dispose();\n      });\n    }\n    gpuMonitor.destroy();\n    renderer.dispose();\n    if (mountNode) {\n      mountNode.removeChild(renderer.domElement);\n    }\n    if (overlay && overlay.parentNode) {\n      overlay.parentNode.removeChild(overlay);\n    }\n  }\n  function getCurrentSettings() {\n    return {\n      targetFps,\n      backgroundFps,\n      pixelRatioClamp,\n      viewportScale,\n      theme: currentTheme\n    };\n  }\n  return {\n    cleanup,\n    gpuMonitor,\n    scene,\n    renderer,\n    setPerformanceMode,\n    setTargetFps,\n    setBackgroundFps,\n    setPixelRatioClamp: setPixelRatioClampValue,\n    setViewportScale: setViewportScaleValue,\n    setTheme,\n    getCurrentSettings,\n    currentTheme\n  };\n}","map":{"version":3,"names":["THREE","GLTFLoader","GPUMonitor","createModelScene","mountNode","scene","Scene","background","Color","camera","PerspectiveCamera","clientWidth","clientHeight","position","set","renderer","WebGLRenderer","antialias","powerPreference","pixelRatioClamp","viewportScale","applyRendererSizing","canvasW","canvasH","renderW","Math","max","floor","renderH","setPixelRatio","min","window","devicePixelRatio","setSize","domElement","style","width","height","imageRendering","appendChild","gpuMonitor","ambientLight","AmbientLight","directionalLight","DirectionalLight","add","loader","model","isModelLoaded","load","gltf","scale","undefined","error","console","overlay","document","createElement","top","left","padding","borderRadius","fontFamily","fontSize","color","zIndex","boxShadow","border","updateOverlayText","content","textContent","toFixed","row","display","alignItems","gap","title","innerHTML","overlayCollapsed","collapseBtn","cursor","marginLeft","firstChild","collapsedPill","addEventListener","isDragging","prevX","prevY","onPointerDown","e","clientX","clientY","onPointerMove","deltaX","deltaY","rotation","y","x","PI","onPointerUp","targetFps","backgroundFps","frameIntervalMs","lastRenderTime","isHidden","hidden","rampStartMs","rampDurationMs","getEffectiveIntervalMs","now","hiddenInterval","visibleInterval","t","eased","eff","animate","elapsed","effInterval","render","onFrameRendered","requestAnimationFrame","setPerformanceMode","mode","setTargetFps","nextFps","setBackgroundFps","setPixelRatioClampValue","nextClamp","setViewportScaleValue","nextScale","currentTheme","setTheme","theme","intensity","traverse","obj","isMesh","material","Array","isArray","forEach","m","metalness","roughness","aspect","updateProjectionMatrix","wasHidden","performance","cleanup","removeEventListener","child","geometry","dispose","destroy","removeChild","parentNode","getCurrentSettings","setPixelRatioClamp","setViewportScale"],"sources":["C:/D-Drive/AI For Retail/Sustainability Hackathon FLO 2025/Latest Code/sustainable-ux/src/ThreeDModelScene.js"],"sourcesContent":["import * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { GPUMonitor } from './GPUMonitor';  // Ensure implemented or stubbed\n\nexport function createModelScene(mountNode) {\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xffffff);\n\n  const camera = new THREE.PerspectiveCamera(\n    60,\n    mountNode.clientWidth / mountNode.clientHeight,\n    0.1,\n    1000\n  );\n  camera.position.set(0, 1, 3);\n\n  const renderer = new THREE.WebGLRenderer({ antialias: true, powerPreference: 'low-power' });\n  // Adaptive resolution params (mutable)\n  let pixelRatioClamp = 1.5; // max device pixel ratio used\n  let viewportScale = 1.0;   // render size factor relative to canvas size\n  const applyRendererSizing = () => {\n    const canvasW = mountNode.clientWidth;\n    const canvasH = mountNode.clientHeight;\n    const renderW = Math.max(1, Math.floor(canvasW * viewportScale));\n    const renderH = Math.max(1, Math.floor(canvasH * viewportScale));\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, pixelRatioClamp));\n    renderer.setSize(renderW, renderH, false);\n    // Upscale to fit the container while rendering at lower res\n    renderer.domElement.style.width = canvasW + 'px';\n    renderer.domElement.style.height = canvasH + 'px';\n    renderer.domElement.style.imageRendering = 'pixelated';\n  };\n  applyRendererSizing();\n  mountNode.appendChild(renderer.domElement);\n\n  const gpuMonitor = new GPUMonitor(renderer);\n\n  const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n  const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n  directionalLight.position.set(5, 5, 5);\n  scene.add(ambientLight);\n  scene.add(directionalLight);\n\n  const loader = new GLTFLoader();\n  let model = null;\n  let isModelLoaded = false;\n\n  loader.load(\n    '/models/car.glb',  // Ensure model is in /public/models/car_model.glb\n    (gltf) => {\n      model = gltf.scene;\n      model.scale.set(0.5, 0.5, 0.5);\n      model.position.set(0, 0, 0);\n      scene.add(model);\n      isModelLoaded = true;\n    },\n    undefined,\n    (error) => console.error('Model load error:', error)\n  );\n\n  // Minimal overlay for current settings (metrics live in dashboard)\n  const overlay = document.createElement('div');\n  overlay.style.position = 'absolute';\n  overlay.style.top = '10px';\n  overlay.style.left = '10px';\n  overlay.style.background = 'rgba(255,255,255,0.85)';\n  overlay.style.padding = '8px 10px';\n  overlay.style.borderRadius = '12px';\n  overlay.style.fontFamily = 'Arial, sans-serif';\n  overlay.style.fontSize = '12px';\n  overlay.style.color = '#333';\n  overlay.style.zIndex = '10';\n  overlay.style.boxShadow = '0 10px 20px rgba(0,0,0,0.2)';\n  overlay.style.border = '1px solid rgba(0,0,0,0.1)';\n  mountNode.style.position = 'relative';\n  const updateOverlayText = () => {\n    const content = document.createElement('div');\n    content.textContent = `Resolution: PR≤${pixelRatioClamp.toFixed(2)} • Viewport ${(viewportScale*100).toFixed(0)}%`;\n    const row = document.createElement('div');\n    row.style.display = 'flex';\n    row.style.alignItems = 'center';\n    row.style.gap = '8px';\n    const title = document.createElement('strong');\n    title.textContent = 'Scene Settings';\n    title.style.fontSize = '12px';\n    row.appendChild(title);\n    overlay.innerHTML = '';\n    overlay.appendChild(row);\n    overlay.appendChild(content);\n  };\n  updateOverlayText();\n  mountNode.appendChild(overlay);\n\n  // Collapsible overlay handle\n  let overlayCollapsed = false;\n  const collapseBtn = document.createElement('button');\n  collapseBtn.textContent = '−';\n  collapseBtn.style.background = 'transparent';\n  collapseBtn.style.border = 'none';\n  collapseBtn.style.cursor = 'pointer';\n  collapseBtn.style.fontSize = '14px';\n  collapseBtn.style.marginLeft = '6px';\n  collapseBtn.title = 'Collapse';\n  overlay.firstChild && overlay.firstChild.appendChild(collapseBtn);\n  const collapsedPill = document.createElement('button');\n  collapsedPill.textContent = 'Scene Settings';\n  collapsedPill.style.position = 'absolute';\n  collapsedPill.style.top = '10px';\n  collapsedPill.style.left = '10px';\n  collapsedPill.style.padding = '6px 10px';\n  collapsedPill.style.borderRadius = '999px';\n  collapsedPill.style.border = '1px solid rgba(0,0,0,0.15)';\n  collapsedPill.style.background = 'rgba(255,255,255,0.9)';\n  collapsedPill.style.fontFamily = 'Arial, sans-serif';\n  collapsedPill.style.fontSize = '12px';\n  collapsedPill.style.cursor = 'pointer';\n  collapsedPill.style.boxShadow = '0 8px 16px rgba(0,0,0,0.15)';\n  collapsedPill.style.display = 'none';\n  collapsedPill.style.zIndex = '11';\n  collapsedPill.addEventListener('click', () => {\n    overlayCollapsed = false;\n    overlay.style.display = 'block';\n    collapsedPill.style.display = 'none';\n  });\n  mountNode.appendChild(collapsedPill);\n  collapseBtn.addEventListener('click', () => {\n    overlayCollapsed = !overlayCollapsed;\n    if (overlayCollapsed) {\n      overlay.style.display = 'none';\n      collapsedPill.style.display = 'inline-block';\n    } else {\n      overlay.style.display = 'block';\n      collapsedPill.style.display = 'none';\n    }\n  });\n\n  // Interaction variables\n  let isDragging = false;\n  let prevX = 0;\n  let prevY = 0;\n\n  function onPointerDown(e) {\n    isDragging = true;\n    prevX = e.clientX;\n    prevY = e.clientY;\n  }\n\n  function onPointerMove(e) {\n    if (!isDragging || !isModelLoaded) return;\n\n    const deltaX = e.clientX - prevX;\n    const deltaY = e.clientY - prevY;\n\n    model.rotation.y += deltaX * 0.005;\n    model.rotation.x += deltaY * 0.005;\n\n    // Clamp vertical rotation to prevent flipping\n    model.rotation.x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, model.rotation.x));\n\n    prevX = e.clientX;\n    prevY = e.clientY;\n  }\n\n  function onPointerUp() {\n    isDragging = false;\n  }\n\n  renderer.domElement.addEventListener('pointerdown', onPointerDown);\n  renderer.domElement.addEventListener('pointermove', onPointerMove);\n  renderer.domElement.addEventListener('pointerup', onPointerUp);\n  renderer.domElement.addEventListener('pointerleave', onPointerUp);\n\n  // Render cadence control\n  let targetFps = 30;                 // foreground FPS target\n  let backgroundFps = 5;              // when tab/page is hidden\n  let frameIntervalMs = 1000 / targetFps;\n  let lastRenderTime = 0;\n  let isHidden = typeof document !== 'undefined' ? document.hidden : false;\n  // Smooth recovery state\n  let rampStartMs = 0;\n  let rampDurationMs = 900;\n\n  function getEffectiveIntervalMs(now) {\n    const hiddenInterval = 1000 / Math.max(1, backgroundFps);\n    const visibleInterval = frameIntervalMs;\n    if (isHidden) return hiddenInterval;\n    // If we just became visible, ramp from hiddenInterval to visibleInterval\n    const t = rampStartMs ? Math.min(1, (now - rampStartMs) / rampDurationMs) : 1;\n    const eased = t < 1 ? (t*t*(3 - 2*t)) : 1; // smoothstep easing\n    const eff = hiddenInterval + (visibleInterval - hiddenInterval) * eased;\n    return eff;\n  }\n\n  function animate(now) {\n    if (!lastRenderTime) lastRenderTime = now;\n    const elapsed = now - lastRenderTime;\n    const effInterval = getEffectiveIntervalMs(now);\n    if (elapsed >= effInterval) {\n      renderer.render(scene, camera);\n      if (gpuMonitor && typeof gpuMonitor.onFrameRendered === 'function') {\n        gpuMonitor.onFrameRendered(now);\n      }\n      lastRenderTime = now;\n    }\n    requestAnimationFrame(animate);\n  }\n\n  requestAnimationFrame(animate);\n\n  function setPerformanceMode(mode) {\n    if (mode === 'baseline') {\n      targetFps = 60;\n      frameIntervalMs = 1000 / targetFps;\n      pixelRatioClamp = 3;\n    } else {\n      targetFps = 30;\n      frameIntervalMs = 1000 / targetFps;\n      pixelRatioClamp = 1.5;\n    }\n    applyRendererSizing();\n  }\n\n  function setTargetFps(nextFps) {\n    targetFps = Math.max(1, Math.min(120, nextFps || 30));\n    frameIntervalMs = 1000 / targetFps;\n  }\n\n  function setBackgroundFps(nextFps) {\n    backgroundFps = Math.max(1, Math.min(30, nextFps || 5));\n  }\n\n  function setPixelRatioClampValue(nextClamp) {\n    pixelRatioClamp = Math.max(0.5, Math.min(3, nextClamp || 1.5));\n    applyRendererSizing();\n    updateOverlayText();\n  }\n\n  function setViewportScaleValue(nextScale) {\n    viewportScale = Math.max(0.3, Math.min(1, nextScale || 1));\n    applyRendererSizing();\n    updateOverlayText();\n  }\n\n  // Sustainable themes: light, dark, eink, high-contrast\n  let currentTheme = 'light';\n  function setTheme(theme) {\n    currentTheme = theme;\n    if (theme === 'dark') {\n      scene.background = new THREE.Color(0x0b0b0b);\n      ambientLight.intensity = 0.35;\n      directionalLight.intensity = 0.6;\n    } else if (theme === 'eink') {\n      scene.background = new THREE.Color(0xf2f2f2);\n      ambientLight.intensity = 0.25;\n      directionalLight.intensity = 0.4;\n      // Force materials to grayscale\n      scene.traverse((obj) => {\n        if (obj.isMesh && obj.material) {\n          if (Array.isArray(obj.material)) {\n            obj.material.forEach(m => { m.color = new THREE.Color(0x222222); m.metalness = 0; m.roughness = 1; });\n          } else {\n            obj.material.color = new THREE.Color(0x222222);\n            if ('metalness' in obj.material) obj.material.metalness = 0;\n            if ('roughness' in obj.material) obj.material.roughness = 1;\n          }\n        }\n      });\n    } else if (theme === 'high-contrast') {\n      scene.background = new THREE.Color(0x000000);\n      ambientLight.intensity = 0.2;\n      directionalLight.intensity = 1.2;\n      directionalLight.color = new THREE.Color(0xffffff);\n    } else { // light\n      scene.background = new THREE.Color(0xffffff);\n      ambientLight.intensity = 0.7;\n      directionalLight.intensity = 1.0;\n    }\n    // Overlay styling according to theme brightness\n    overlay.style.background = (theme === 'dark' || theme === 'high-contrast') ? 'rgba(0,0,0,0.7)' : 'rgba(255,255,255,0.85)';\n    overlay.style.color = (theme === 'dark' || theme === 'high-contrast') ? '#fff' : '#333';\n  }\n\n  window.addEventListener('resize', () => {\n    camera.aspect = mountNode.clientWidth / mountNode.clientHeight;\n    camera.updateProjectionMatrix();\n    applyRendererSizing();\n  });\n\n  document.addEventListener('visibilitychange', () => {\n    const wasHidden = isHidden;\n    isHidden = document.hidden;\n    if (!isHidden && wasHidden) {\n      rampStartMs = performance.now();\n    }\n  });\n\n  function cleanup() {\n    renderer.domElement.removeEventListener('pointerdown', onPointerDown);\n    renderer.domElement.removeEventListener('pointermove', onPointerMove);\n    renderer.domElement.removeEventListener('pointerup', onPointerUp);\n    renderer.domElement.removeEventListener('pointerleave', onPointerUp);\n\n    if (model) {\n      model.traverse((child) => {\n        if (child.geometry) child.geometry.dispose();\n        if (child.material) child.material.dispose();\n      });\n    }\n\n    gpuMonitor.destroy();\n    renderer.dispose();\n\n    if (mountNode) {\n      mountNode.removeChild(renderer.domElement);\n    }\n    if (overlay && overlay.parentNode) {\n      overlay.parentNode.removeChild(overlay);\n    }\n  }\n\n  function getCurrentSettings() {\n    return {\n      targetFps,\n      backgroundFps,\n      pixelRatioClamp,\n      viewportScale,\n      theme: currentTheme\n    };\n  }\n\n  return {\n    cleanup,\n    gpuMonitor,\n    scene,\n    renderer,\n    setPerformanceMode,\n    setTargetFps,\n    setBackgroundFps,\n    setPixelRatioClamp: setPixelRatioClampValue,\n    setViewportScale: setViewportScaleValue,\n    setTheme,\n    getCurrentSettings,\n    currentTheme\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}